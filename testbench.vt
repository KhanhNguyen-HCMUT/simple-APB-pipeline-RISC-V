`timescale 1ns / 1ps

module top_tb;
    // Testbench signals
    reg i_clk, i_reset;
    reg [31:0] i_io_sw;
    
    // Outputs from top module
    wire [31:0] o_io_lcd;
    wire [31:0] o_io_ledg;
    wire [31:0] o_io_ledr;
    wire [6:0] o_io_hex0;
    wire [6:0] o_io_hex1;
    wire [6:0] o_io_hex2;
    wire [6:0] o_io_hex3;
    wire [6:0] o_io_hex4;
    wire [6:0] o_io_hex5;
    wire [6:0] o_io_hex6;
    wire [6:0] o_io_hex7;
    wire [31:0] o_pc_debug;
    wire o_insn_vld;
    wire tim_int;
    wire [63:0] cnt;

    // Instantiate top module
    top uut (
        .i_clk(i_clk),
        .i_reset(i_reset),
        .i_io_sw(i_io_sw),
        .o_io_lcd(o_io_lcd),
        .o_io_ledg(o_io_ledg),
        .o_io_ledr(o_io_ledr),
        .o_io_hex0(o_io_hex0),
        .o_io_hex1(o_io_hex1),
        .o_io_hex2(o_io_hex2),
        .o_io_hex3(o_io_hex3),
        .o_io_hex4(o_io_hex4),
        .o_io_hex5(o_io_hex5),
        .o_io_hex6(o_io_hex6),
        .o_io_hex7(o_io_hex7),
        .o_pc_debug(o_pc_debug),
        .o_insn_vld(o_insn_vld),
        .tim_int(tim_int),
        .cnt(cnt)
    );

    // Clock generation
    always #10 i_clk = ~i_clk;

    // Test sequence
    initial begin
        i_clk = 0;
        i_reset = 0;        // Active high reset
        i_io_sw = 32'h0;
        #100;               // Hold reset for 100ns
        i_reset = 1;        // Release reset
        i_io_sw = 32'h4;
        #2000;
        $finish;
    end

endmodule
